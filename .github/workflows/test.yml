name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        exclude:
          # Exclude some combinations to save CI time
          - os: windows-latest
            python-version: "3.9"
          - os: macos-latest
            python-version: "3.9"

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better git testing

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"

    - name: Configure git for tests
      run: |
        git config --global user.email "test@github.actions"
        git config --global user.name "GitHub Actions"

    - name: Run linting
      run: |
        pip install ruff
        ruff check . || true  # Don't fail on linting for now

    - name: Run unit tests
      run: |
        pytest tests/unit -v --cov=. --cov-report=xml --cov-report=term -m "not integration and not slow"

    - name: Run integration tests
      run: |
        pytest tests/integration -v -m "integration and not slow"

    - name: Run all tests with coverage
      run: |
        pytest tests/ -v --cov=. --cov-report=xml --cov-report=term --cov-report=html

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run black
      run: |
        black --check . || echo "Black formatting issues found"
    
    - name: Run ruff
      run: |
        ruff check . || echo "Ruff linting issues found"

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security checks
      run: |
        pip install safety bandit
        safety check || true  # Don't fail on vulnerabilities for now
        bandit -r . -ll || true  # Low severity and above

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Build package
      run: |
        python -m pip install --upgrade pip
        pip install build
        python -m build
    
    - name: Check package
      run: |
        pip install twine
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/